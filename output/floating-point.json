[
  {
    "EventName": "DUAL3",
    "EventCode": "0x00",
    "BriefDescription": "Total number multi-pipe uOps assigned to Pipe 3.",
    "PublicDescription": "Read-only. Reset: 00h. The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMXTM, and SSE instructions, including moves. Each increment represents a one- cycle dispatch event. This event is a speculative event. (See Core::X86::Pmc::Core::ExRetMmxFpInstr). Since this event includes non-numeric operations it is not suitable for measuring MFLOPS. Total number multi-pipe uOps assigned to Pipe 3.",
    "UMask": "0x80"
  },
  {
    "EventName": "DUAL2",
    "EventCode": "0x00",
    "BriefDescription": "Total number multi-pipe uOps assigned to Pipe 2.",
    "PublicDescription": "Read-only. Reset: 00h. The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMXTM, and SSE instructions, including moves. Each increment represents a one- cycle dispatch event. This event is a speculative event. (See Core::X86::Pmc::Core::ExRetMmxFpInstr). Since this event includes non-numeric operations it is not suitable for measuring MFLOPS. Total number multi-pipe uOps assigned to Pipe 2.",
    "UMask": "0x40"
  },
  {
    "EventName": "DUAL1",
    "EventCode": "0x00",
    "BriefDescription": "Total number multi-pipe uOps assigned to Pipe 1.",
    "PublicDescription": "Read-only. Reset: 00h. The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMXTM, and SSE instructions, including moves. Each increment represents a one- cycle dispatch event. This event is a speculative event. (See Core::X86::Pmc::Core::ExRetMmxFpInstr). Since this event includes non-numeric operations it is not suitable for measuring MFLOPS. Total number multi-pipe uOps assigned to Pipe 1.",
    "UMask": "0x20"
  },
  {
    "EventName": "DUAL0",
    "EventCode": "0x00",
    "BriefDescription": "Total number multi-pipe uOps assigned to Pipe 0.",
    "PublicDescription": "Read-only. Reset: 00h. The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMXTM, and SSE instructions, including moves. Each increment represents a one- cycle dispatch event. This event is a speculative event. (See Core::X86::Pmc::Core::ExRetMmxFpInstr). Since this event includes non-numeric operations it is not suitable for measuring MFLOPS. Total number multi-pipe uOps assigned to Pipe 0.",
    "UMask": "0x10"
  },
  {
    "EventName": "TOTAL3",
    "EventCode": "0x00",
    "BriefDescription": "Total number uOps assigned to Pipe 3.",
    "PublicDescription": "Read-only. Reset: 00h. The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMXTM, and SSE instructions, including moves. Each increment represents a one- cycle dispatch event. This event is a speculative event. (See Core::X86::Pmc::Core::ExRetMmxFpInstr). Since this event includes non-numeric operations it is not suitable for measuring MFLOPS. Total number uOps assigned to Pipe 3.",
    "UMask": "0x8"
  },
  {
    "EventName": "TOTAL2",
    "EventCode": "0x00",
    "BriefDescription": "Total number uOps assigned to Pipe 2.",
    "PublicDescription": "Read-only. Reset: 00h. The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMXTM, and SSE instructions, including moves. Each increment represents a one- cycle dispatch event. This event is a speculative event. (See Core::X86::Pmc::Core::ExRetMmxFpInstr). Since this event includes non-numeric operations it is not suitable for measuring MFLOPS. Total number uOps assigned to Pipe 2.",
    "UMask": "0x4"
  },
  {
    "EventName": "TOTAL1",
    "EventCode": "0x00",
    "BriefDescription": "Total number uOps assigned to Pipe 1.",
    "PublicDescription": "Read-only. Reset: 00h. The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMXTM, and SSE instructions, including moves. Each increment represents a one- cycle dispatch event. This event is a speculative event. (See Core::X86::Pmc::Core::ExRetMmxFpInstr). Since this event includes non-numeric operations it is not suitable for measuring MFLOPS. Total number uOps assigned to Pipe 1.",
    "UMask": "0x2"
  },
  {
    "EventName": "TOTAL0",
    "EventCode": "0x00",
    "BriefDescription": "Total number uOps assigned to Pipe 0.",
    "PublicDescription": "Read-only. Reset: 00h. The number of operations (uOps) and dual-pipe uOps dispatched to each of the 4 FPU execution pipelines. This event reflects how busy the FPU pipelines are and may be used for workload characterization. This includes all operations performed by x87, MMXTM, and SSE instructions, including moves. Each increment represents a one- cycle dispatch event. This event is a speculative event. (See Core::X86::Pmc::Core::ExRetMmxFpInstr). Since this event includes non-numeric operations it is not suitable for measuring MFLOPS. Total number uOps assigned to Pipe 0.",
    "UMask": "0x1"
  },
  {
    "EventName": "FP_SCHED_EMPTY",
    "EventCode": "0x01",
    "BriefDescription": "This is a speculative event. The number of cycles in which the FPU scheduler is empty. Note that some Ops like FP loads bypass the scheduler. Invert this (Core::X86::Msr::PERF_CTL[Inv] == 1) to count cycles in which at least one FPU operation is present in the FPU."
  },
  {
    "EventName": "DIV_SQR_R_OPS",
    "EventCode": "0x02",
    "BriefDescription": "Divide and square root Ops.",
    "PublicDescription": "The number of x87 floating-point Ops that have retired. The number of events logged per cycle can vary from 0 to 8. Divide and square root Ops.",
    "UMask": "0x4"
  },
  {
    "EventName": "MUL_OPS",
    "EventCode": "0x02",
    "BriefDescription": "Multiply Ops.",
    "PublicDescription": "The number of x87 floating-point Ops that have retired. The number of events logged per cycle can vary from 0 to 8. Multiply Ops.",
    "UMask": "0x2"
  },
  {
    "EventName": "ADD_SUB_OPS",
    "EventCode": "0x02",
    "BriefDescription": "Add/subtract Ops.",
    "PublicDescription": "The number of x87 floating-point Ops that have retired. The number of events logged per cycle can vary from 0 to 8. Add/subtract Ops.",
    "UMask": "0x1"
  },
  {
    "EventName": "DP_MULT_ADD_FLOPS",
    "EventCode": "0x03",
    "BriefDescription": "Double precision multiply-add FLOPS.  Multiply-add counts as 2 FLOPS.",
    "PublicDescription": "This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15. See 2.1.13.2 [Large Increment per Cycle Events]. Double precision multiply-add FLOPS.  Multiply-add counts as 2 FLOPS.",
    "UMask": "0x80"
  },
  {
    "EventName": "DP_DIV_FLOPS",
    "EventCode": "0x03",
    "BriefDescription": "Double precision divide/square root FLOPS.",
    "PublicDescription": "This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15. See 2.1.13.2 [Large Increment per Cycle Events]. Double precision divide/square root FLOPS.",
    "UMask": "0x40"
  },
  {
    "EventName": "DP_MULT_FLOPS",
    "EventCode": "0x03",
    "BriefDescription": "Double precision multiply FLOPS.",
    "PublicDescription": "This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15. See 2.1.13.2 [Large Increment per Cycle Events]. Double precision multiply FLOPS.",
    "UMask": "0x20"
  },
  {
    "EventName": "DP_ADD_SUB_FLOPS",
    "EventCode": "0x03",
    "BriefDescription": "Double precision add/subtract FLOPS.",
    "PublicDescription": "This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15. See 2.1.13.2 [Large Increment per Cycle Events]. Double precision add/subtract FLOPS.",
    "UMask": "0x10"
  },
  {
    "EventName": "SP_MULT_ADD_FLOPS",
    "EventCode": "0x03",
    "BriefDescription": "Single precision multiply-add FLOPS.  Multiply-add counts as 2 FLOPS.",
    "PublicDescription": "This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15. See 2.1.13.2 [Large Increment per Cycle Events]. Single precision multiply-add FLOPS.  Multiply-add counts as 2 FLOPS.",
    "UMask": "0x8"
  },
  {
    "EventName": "SP_DIV_FLOPS",
    "EventCode": "0x03",
    "BriefDescription": "Single-precision divide/square root FLOPS.",
    "PublicDescription": "This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15. See 2.1.13.2 [Large Increment per Cycle Events]. Single-precision divide/square root FLOPS.",
    "UMask": "0x4"
  },
  {
    "EventName": "SP_MULT_FLOPS",
    "EventCode": "0x03",
    "BriefDescription": "Single-precision multiply FLOPS.",
    "PublicDescription": "This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15. See 2.1.13.2 [Large Increment per Cycle Events]. Single-precision multiply FLOPS.",
    "UMask": "0x2"
  },
  {
    "EventName": "SP_ADD_SUB_FLOPS",
    "EventCode": "0x03",
    "BriefDescription": "Single-precision add/subtract FLOPS.",
    "PublicDescription": "This is a retire-based event. The number of retired SSE/AVX FLOPS. The number of events logged per cycle can vary from 0 to 64. This event can count above 15. See 2.1.13.2 [Large Increment per Cycle Events]. Single-precision add/subtract FLOPS.",
    "UMask": "0x1"
  },
  {
    "EventName": "OPTIMIZED",
    "EventCode": "0x04",
    "BriefDescription": "Number of Scalar Ops optimized.",
    "PublicDescription": "This is a dispatch based speculative event, and is useful for measuring the effectiveness of the Move elimination and Scalar code optimization schemes. Number of Scalar Ops optimized.",
    "UMask": "0x8"
  },
  {
    "EventName": "OPT_POTENTIAL",
    "EventCode": "0x04",
    "BriefDescription": "Number of Ops that are candidates for optimization (have Z-bit either set or pass).",
    "PublicDescription": "This is a dispatch based speculative event, and is useful for measuring the effectiveness of the Move elimination and Scalar code optimization schemes. Number of Ops that are candidates for optimization (have Z-bit either set or pass).",
    "UMask": "0x4"
  },
  {
    "EventName": "SSE_MOV_OPS_ELIM",
    "EventCode": "0x04",
    "BriefDescription": "Number of SSE Move Ops eliminated.",
    "PublicDescription": "This is a dispatch based speculative event, and is useful for measuring the effectiveness of the Move elimination and Scalar code optimization schemes. Number of SSE Move Ops eliminated.",
    "UMask": "0x2"
  },
  {
    "EventName": "SSE_MOV_OPS",
    "EventCode": "0x04",
    "BriefDescription": "Number of SSE Move Ops.",
    "PublicDescription": "This is a dispatch based speculative event, and is useful for measuring the effectiveness of the Move elimination and Scalar code optimization schemes. Number of SSE Move Ops.",
    "UMask": "0x1"
  },
  {
    "EventName": "X87_CTRL_RET",
    "EventCode": "0x05",
    "BriefDescription": "x87 control word mispredict traps due to mispredictions in RC or PC, or changes in mask bits.",
    "PublicDescription": "The number of serializing Ops retired. x87 control word mispredict traps due to mispredictions in RC or PC, or changes in mask bits.",
    "UMask": "0x8"
  },
  {
    "EventName": "X87_BOT_RET",
    "EventCode": "0x05",
    "BriefDescription": "x87 bottom-executing uOps retired.",
    "PublicDescription": "The number of serializing Ops retired. x87 bottom-executing uOps retired.",
    "UMask": "0x4"
  },
  {
    "EventName": "SSE_CTRL_RET",
    "EventCode": "0x05",
    "BriefDescription": "SSE control word mispredict traps due to mispredictions in RC, FTZ or DAZ, or changes in mask bits.",
    "PublicDescription": "The number of serializing Ops retired. SSE control word mispredict traps due to mispredictions in RC, FTZ or DAZ, or changes in mask bits.",
    "UMask": "0x2"
  },
  {
    "EventName": "SSE_BOT_RET",
    "EventCode": "0x05",
    "BriefDescription": "SSE bottom-executing uOps retired.",
    "PublicDescription": "The number of serializing Ops retired. SSE bottom-executing uOps retired.",
    "UMask": "0x1"
  }
]